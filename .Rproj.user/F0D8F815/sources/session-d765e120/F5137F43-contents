#### Import pre-processed .imzML files ####

# Import data sequentially

# List samples for processing

list.s <- data.frame(
  "ID" = seq(
    1:length(
      list.files(
        path = list.p$path.d
      )[grepl(
        list.p$polarity,
        list.files(
          path = list.p$path.d
        )
      ) &
        grepl(
          ".imzML",
          list.files(
            path = list.p$path.d
          )
        )
      ])
  ),
  "Sample.imzML" = list.files(
    path = list.p$path.d
  )[grepl(
    list.p$polarity,
    list.files(
      path = list.p$path.d
    )
  ) &
    grepl(
      ".imzML",
      list.files(
        path = list.p$path.d
      )
    )
  ],
  "Sample.ibd" = list.files(
    path = list.p$path.d
  )[grepl(
    list.p$polarity,
    list.files(
      path = list.p$path.d
    )
  ) &
    grepl(
      ".ibd",
      list.files(
        path = list.p$path.d
      )
    )
  ]
)


## Import data
list.d <- setNames(
  lapply(
    list.s[["ID"]],
    function(x) 
    {
      
      d <- readMSIData(
        # data file name
        paste(
          list.p$path.d,
          list.s[x,"Sample.imzML"],
          sep = ""
        ),
        # load dataset as sparse matrix
        attach.only = T,
        # mass range
        mass.range = c(
          list.p$mz.range.low,
          list.p$mz.range.high
        ),
        # resolution
        resolution = list.p$resolution,
        units = "ppm"
      )
      
      if(class(d) == "MSProcessedImagingExperiment") {
        
        centroided(d) <- F
        
      }
      
      return(d)
      
    }
  ),
  c(
    list.s[["Sample.imzML"]]
  )
)

list.d <- list.d[lengths(list.d) > 0]

list.d <- setNames(
  lapply(
    seq(1:length(list.d)),
    function(x) {
      run(list.d[[x]]) <- list.s[x,"ID"]
      
      return(list.d[[x]])
    }
  ),
  c(
    list.s[["Sample.imzML"]]
  )
)

## view attributes to verify successful import
class(list.d)

length(list.d)

list.d









