#' ChemRICH Analysis Function
#'
#' Conducts ChemRICH analysis for selected comparison.This enrichment analysis method is adapted
#' from Chemical Similarity Enrichment Analysis (ChemRICH), initially described
#' in Barupal et. al. 2017 (DOI: 10.1038/s41598-017-15231-w). Statistically enriched classes are determined by a weighted Kolmogorov-Smirnov
#' Test with false discovery rate correction.
#'
#' @param l.cr.input Formatted ChemRICH input data frame.
#' @param pval.no Numeric position of p-value column.
#' @param fc.no Numeric position of fold change column.
#' @param md Number of metadata columns present in ChemRICH data frame.
#' @param cl.var Cluster variable.
#' @return A ChemRICH results data frame containing cluster size, increased/decreased proportion, and information for ChemRICH dot plots.
#' @examples
#' chemrich.plot <- MSI.run.ChemRICH(
#' chemrich.input,
#' 7,
#' 16,
#' 3,
#' "Class"
#' )
#'
#' @export
MSI.run.ChemRICH <- function(
    l.cr.input,
    pval.no,
    fc.no,
    md,
    cl.var
    ) {

  ## Select ChemRICH comparison

  cr1 <- data.frame(
    l.cr.input[,c(1:md)],
    l.cr.input[,c(pval.no,fc.no)]
  )

  ## Run KS test for chosen clustering

  ks <- unique(
    cr1[[cl.var]]
  )

  cr.ks <- lapply(
    ks,
    function(x) {

      ks.df <- cr1

      ks3 <- ks.test(
        dplyr::select(
          dplyr::filter(
            ks.df,
            .data[[cl.var]] == x
          ),
          (md + 1)
        ),
        "punif",
        alternative = "greater"
      )

      ks3 <- data.frame(
        `Cluster` = x,
        `p-value` = ks3[["p.value"]]
      )

      return(ks3)

    }
  )

  ## Format results and include additional columns for Index, FDR, Inc/Dec ratio, and cluster counts

  cr.ks <- data.frame(
    "ID" = seq(
      1:length(
        cr.ks
      )
    ),
    "Cluster" = dplyr::bind_rows(
      lapply(
        cr.ks,
        "[",
        1
      )
    ),
    "p.value" = dplyr::bind_rows(
      lapply(
        cr.ks,
        "[",
        2
      )
    )
  )

  cr.ks <- dplyr::left_join(
    data.frame(
      cr.ks,
      "FDR" = round(
        p.adjust(
          cr.ks[["p.value"]],
          method = "fdr"
          ),
        digits = 4
        )
    ),
    setNames(
      dplyr::count(
        cr1,
        as.character(
          cr1[[cl.var]])),
      c(
        "Cluster",
        "n"
      )
    ),
    by = "Cluster"
  )

  ### Inc/Dec number

  cr.rat <- data.frame(
    setNames(
      dplyr::count(
        dplyr::filter(
          data.frame(
            "Cluster" = as.character(
              cr1[[cl.var]]
            ),
            "Ratio" = ifelse(
              cr1[[(md + 2)]] > 0,
              "Inc",
              "Dec"
            )
          ),
          .data[["Ratio"]] == "Inc"
        ),
        .data[["Cluster"]]
      ),
      c(
        "Cluster",
        "Increased"
      )
    )
  )

  cr.rat <- dplyr::full_join(cr.rat,setNames(
    dplyr::count(
      dplyr::filter(
        data.frame(
          "Cluster" = as.character(
            cr1[[cl.var]]
          ),
          "Ratio" = ifelse(
            cr1[[(md + 2)]] > 0,
            "Inc",
            "Dec"
          )
        ),
        .data[["Ratio"]] == "Dec"
      ),
      .data[["Cluster"]]
    ),
    c(
      "Cluster",
      "Decreased"
    )
  ),by = "Cluster")


  ## Combine KS and cluster counts; add ratio column

  cr.plot <- dplyr::left_join(
    cr.ks,
    cr.rat,
    by = "Cluster"
  )

  cr.plot[is.na(cr.plot)] <- 0


  cr.plot[["Ratio"]] <- ifelse(
    cr.plot[["Decreased"]] == 0,
    1,
    (cr.plot[["Increased"]])/
      (cr.plot[["Increased"]] +
         cr.plot[["Decreased"]]
      )
  )

  ## Sort by name
  cr.plot[["sort"]] <- gsub(
    "^.*\\.",
    "",
    cr.plot[["Cluster"]]
    )
  cr.plot <- cr.plot[order(cr.plot[["sort"]]),]
  cr.plot <- cr.plot[,-ncol(cr.plot)]
  cr.plot[["Cluster"]] <- ifelse(
    grepl("Unsaturated",cr.plot[["Cluster"]]),
    gsub("Unsaturated","U",cr.plot[["Cluster"]]),
    gsub("Saturated","S",cr.plot[["Cluster"]])
    )

  ## Add cluster size column
  cr.plot[["Cluster Size"]] <- cr.plot[["Increased"]] +
    cr.plot[["Decreased"]]
  ## Change cluster name to factor
  if(class(cr.plot[["Cluster"]]) != "factor") {
    cr.plot[["Cluster"]] <- factor(
      cr.plot[["Cluster"]],
      levels = c(cr.plot[["Cluster"]]
                 )
      )
    }

  return(cr.plot)

}






#' Plot ChemRICH Results
#'
#' Plots ChemRICH results for selected comparison as a dot plot.
#'
#' @param df ChemRICH results data frame.
#' @param xlab1 X-axis label name.
#' @param p.title Plot title.
#' @return A dot plot displaying ChemRICH results, including cluster size, increased/decreased proportion, and an indication of statistical significance.
#' @examples
#' chemrich.plot <- MSI.run.ChemRICH(
#' chemrich.input,
#' 7,
#' 16,
#' 3,
#' "Class"
#' )
#'
#' @export
MSI.plot.ChemRICH <- function(
    df,
    xlab1,
    p.title
    ) {
  # Main Plot
  cr.plot <- ggplot2::ggplot(
    df,
    aes(
      x = Cluster,
      y = -log10(FDR),
      fill = Ratio
      )
    ) +
    ## Connect lines to significantly altered clusters
    ggplot2::geom_linerange(
      data = df[df[["FDR"]] < 0.05,],
      ggplot2::aes(
        x = df[df[["FDR"]] < 0.05,"Cluster"],
        ymax = -log10(df[df[["FDR"]] < 0.05,"FDR"]),
        ymin = 0
        ),
      color = "black"
      ) +
    ## Plot points
    ggplot2::geom_point(
      shape = 21,
      col = "black",
      ggplot2::aes(
        size = .data[["Cluster Size"]]
        ),
      alpha = ifelse(
        df[["FDR"]] < 0.05,
        1,
        0.5
        )
      ) +
    ## Significance line
    ggplot2::geom_hline(
      yintercept = 1.3,
      linetype = "dashed",
      color = "#DC0000FF"
      ) +
    ## Theme
    Regio.theme1() +
    ggplot2::theme(plot.margin = grid::unit(
      c(1,4,1,4),
      "cm"
    )) +
    ## Axis labels
    ggplot2::xlab(xlab1) +
    ggplot2::ylab("-log10(adjusted p-value)") +
    ## Gradient and size scaling
    ggplot2::scale_fill_gradientn(
      name = "Increased Ratio",
      colors = c(
        'midnightblue',
        'royalblue2',
        "white",
        'goldenrod1',
        "firebrick3"
        ),
      breaks = c(
        0,.25,.5,.75,1
        ),
      labels = c(
        "100% Decreased",
        "25% Increased:75% Decreased",
        "50% Increased:50% Decreased",
        "75% Increased:25% Decreased",
        "100% Increased"
        )
      ) +
    ggplot2::scale_size_area(
      name = "Cluster Size",
      max_size = 16
      )

  # Save
  ggplot2::ggsave(
    paste(
      "analysis/",
      p.title,
      ".png",
      sep = ""
      ),
    width = 12,
    height = 10,
    dpi = 1000
    )
  }

