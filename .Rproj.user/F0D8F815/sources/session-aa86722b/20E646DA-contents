#### Peak annotation of MSI data ####

MSI.annotate.peaks <- function(
  pk.list,
  an.list
  ){
  # Load peak and LC-MS/MS annotation list
  d.peaks <- pk.list
  list.anno <- an.list

  # Extract detected peaks and peak intensities
  list.f <- data.frame(
    "Feature" = Cardinal::features(d.peaks),
    "mz" = Cardinal::mz(d.peaks),
    "Count" = d.peaks@featureData[["count"]],
    "Frequency" = d.peaks@featureData[["freq"]]
  )

  list.anno.filt <- setNames(
    list.anno[!grepl(
      "iSTD",
      list.anno[["Metabolite.name"]]
    ),
    c("Metabolite.name",
      "Adduct.type",
      "Average.Mz",
      "Source"
    )],
    c("Name",
      "Adduct",
      "mz",
      "Source"
    )
  )


  ## Assign IDs based on LC-MS/MS data
  list.f.anno <- setNames(
    dplyr::select(
      fuzzyjoin::fuzzy_join(
        list.f,
        list.anno.filt,
        by = "mz",
        match_fun = ~ abs(.x - .y) < 0.01
      ),
      c("Feature",
        "Source","Name",
        "Adduct",
        "mz.x","mz.y",
        "Count","Frequency"
      )
    ),
    c(
      "Feature",
      "Source","Name","Adduct",
      "mz.timsTOF","mz.LCMS",
      "Count","Frequency"
    )
  )
  list.f.anno <- list.f.anno[!duplicated(list.f.anno),]

  ## Return unknowns
  list.f.unk <- list.f[list.f[-c(list.f.anno$mz.timsTOF),"mz"],]

  return(
    list(
      "Annotated" = list.f.anno,
      "Unassigned" = list.f.unk
      )
    )

  }





## Load datasets and filter data by annotation
MSI.data.filter <- function(
    path.rds,
    an.list.filt
) {
  ### Load data
  list.d <- readRDS(
    path.rds
  )
  list.f.anno <- an.list.filt

  ### subset by annotation list
  list.sub <- unique(
    list.f.anno[["Feature"]]
  )
  list.d.anno <- setNames(
    lapply(
      list.d,
      function(x)
        x[c(list.sub),]
    ),
    c(
      names(
        list.d
      )
    )
  )

  ### combine samples
  list.d.anno <- do.call(
    Cardinal::cbind,
    list.d.anno
  )

  return(list.d.anno)

}




